{"version":3,"sources":["Client.js","assets/Variables.style.js","assets/common/Wrappers.style.js","assets/common/Headlines.style.js","components/Loader/Loader.style.js","components/Loader/Loader.js","assets/Mixins.style.js","assets/common/Buttons.style.js","assets/common/Inputs.style.js","components/UploadForm/UploadForm.style.js","components/UploadForm/UploadForm.js","assets/scripts/TimeConverter.js","assets/common/Images.style.js","components/ImagesList/ImagesList.style.js","components/ImagesList/ImagesList.js","assets/common/Global.style.js","App.style.js","App.js","Intl.js","registerServiceWorker.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","Breakpoints","xs","sm","md","lg","xlg","Colors","Fonts","Section","css","_templateObject","Container","_templateObject2","Content","_templateObject3","Grid","_templateObject4","AbsoluteWrapper","_templateObject5","Headline","Headlines_style_templateObject","Headline3","Headlines_style_templateObject2","Headlines_style_templateObject3","Headline4","Headlines_style_templateObject4","Wrapper","styled","div","Loader_style_templateObject","Loader_style_templateObject2","commonContent","h1","Loader_style_templateObject3","commonHeadline4","LoaderComponent","_ref","text","wrapper","react_default","a","createElement","react","react_loader_spinner_default","type","color","height","width","Loader_style_Headline4","index_es","id","defaultMessage","default","Loader_style_Content","Media","Object","keys","reduce","acc","label","Mixins_style_templateObject","apply","arguments","Submit","Buttons_style_templateObject","Input","Inputs_style_templateObject","UploadForm_style_templateObject","UploadForm_style_templateObject2","commonHeadline","h4","UploadForm_style_templateObject3","button","UploadForm_style_templateObject4","commonSubmit","UploadForm_style_templateObject5","Form","form","_templateObject6","FakeInputBox","_templateObject7","_templateObject8","InputFile","input","_templateObject9","commonInput","_templateObject10","_templateObject11","_templateObject12","ADD_IMAGE","gql","UploadForm_templateObject","GET_IMAGES","UploadForm_templateObject2","UploadForm","handleImageSend","react_apollo_esm","mutation","update","_ref2","addImage","data","images","readQuery","query","writeQuery","concat","_ref3","loading","error","UploadForm_style_Content","UploadForm_style_Headline","onSubmit","event","preventDefault","upload","document","getElementById","files","uploadFile","readFile","FileReader","dateISOS","Date","toISOString","undefined","value","name","onloadend","variables","file","url","result","date","uniq","uniqid","readAsDataURL","handleSubmit","ref","node","onChange","UploadForm_style_Input","placeholder","UploadForm_style_Submit","Loader","UploadForm_style_Headline4","timeConverter","timestamp","parseInt","year","getFullYear","month","getMonth","toString","getDate","hour","getHours","min","getMinutes","sec","getSeconds","Image","Images_style_templateObject","ImagesList_style_templateObject","ImagesList_style_templateObject2","ImagesList_style_templateObject3","commonGrid","RemoveButton","ImagesList_style_templateObject4","DateLabel","ImagesList_style_templateObject5","Item","ImagesList_style_templateObject6","ImagesList_style_templateObject7","ImagesList_style_templateObject8","img","ImagesList_style_templateObject9","commonImage","h3","ImagesList_style_templateObject10","commonHeadline3","ImagesList_templateObject","REMOVE_IMAGE","ImagesList_templateObject2","ImagesList","_useState","useState","_useState2","slicedToArray","photoIndex","updatePhotoIndex","_useState3","_useState4","isLightboxOpen","setIsLightboxOpen","imagesList","entries","length","map","image","index","key","removeImage","newImages","filter","onClick","ImagesList_style_Image","src","alt","ImagesList_style_Content","ImagesList_style_Grid","ImagesList_style_Headline3","dist_index_es","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","GlobalStyle","createGlobalStyle","Global_style_templateObject","App_style_templateObject","commonSection","App_style_templateObject2","App_style_templateObject3","commonContainer","App_style_templateObject4","App_templateObject","App","target","App_style_Section","App_style_Content","App_style_Container","components_UploadForm_UploadForm","App_style_Headline4","components_ImagesList_ImagesList","addLocaleData","toConsumableArray","locale_en","locale_pl","translations","en-US","en","en-GB","pl-PL","pl","Context","React","createContext","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","ReactDOM","render","children","language","locale","switchLanguage","Provider","messages","defaultLocale","src_App","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.93097689.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n\r\nexport const client = new ApolloClient({\r\n  uri: 'http://localhost:8000/api',\r\n  cache: new InMemoryCache()\r\n});\r\n","export const Breakpoints = {\r\n  xs: 610,\r\n  sm: 768,\r\n  md: 969,\r\n  lg: 1024,\r\n  xlg: 1280\r\n};\r\n\r\nexport const Colors = {\r\n  white: '#ffffff',\r\n  black: '#000000',\r\n  tara: '#d5f2e2',\r\n  casal: '#2f6276',\r\n  smaltBlue: '#518289',\r\n  matisse: '#1D7AA7',\r\n  mischka: '#DDDDE4',\r\n  red: '#FF0000',\r\n  roofTerracotta: '#B21F1F',\r\n};\r\n\r\nexport const Fonts = {\r\n  Amatic: '\"Amatic SC\", cursive',\r\n  Dancing: '\"Dancing Script\", cursive'\r\n}\r\n","import { css } from 'styled-components';\r\n\r\nimport { Colors } from '../Variables.style';\r\n\r\nexport const Section = css`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  background-color: ${Colors.matisse};\r\n  background-image: linear-gradient(to top, ${Colors.matisse}, ${Colors.mischka});\r\n`;\r\n\r\nexport const Container = css`\r\n  width: 100%;\r\n  max-width: 1240px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = css`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Grid = css`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const AbsoluteWrapper = css`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  text-align: center;\r\n`;\r\n","import { css } from 'styled-components';\r\n\r\nexport const Headline = css`\r\n  margin: 0;\r\n  margin-bottom: 25px;\r\n  font-size: 52px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Headline2 = css`\r\n  margin: 0;\r\n  margin-bottom: 20px;\r\n  font-size: 42px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Headline3 = css`\r\n  margin: 0;\r\n  margin-bottom: 15px;\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Headline4 = css`\r\n  margin: 0;\r\n  margin-bottom: 15px;\r\n  font-size: 28px;\r\n  font-weight: 400;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { Fonts } from '../../assets/Variables.style';\r\n\r\nimport {\r\n  Content as commonContent,\r\n  AbsoluteWrapper\r\n} from '../../assets/common/Wrappers.style';\r\nimport { Headline4 as commonHeadline4 } from '../../assets/common/Headlines.style';\r\n\r\nexport const Wrapper = styled.div`\r\n  ${AbsoluteWrapper}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${commonContent}\r\n  padding-top: 50px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Headline4 = styled.h1`\r\n  ${commonHeadline4}\r\n  font-family: ${Fonts.Amatic};\r\n  text-align: center;\r\n`;\r\n","import React, { Fragment } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport { Wrapper, Content, Headline4 } from './Loader.style';\r\n\r\nconst LoaderComponent = ({text, wrapper}) => {\r\n  return (\r\n    <Fragment>\r\n      {wrapper === true && (\r\n        <Wrapper>\r\n          <Loader type=\"RevolvingDot\" color=\"#000000\" height=\"50\" width=\"50\" />\r\n          {text && (\r\n            <Headline4>\r\n              <FormattedMessage\r\n                id={text.id}\r\n                defaultMessage={text.default}\r\n              />\r\n            </Headline4>\r\n          )}\r\n        </Wrapper>\r\n      )}\r\n      {wrapper !== true && (\r\n        <Content>\r\n          <Loader type=\"RevolvingDot\" color=\"#000000\" height=\"50\" width=\"50\" />\r\n          {text && (\r\n            <Headline4>\r\n              <FormattedMessage\r\n                id={text.id}\r\n                defaultMessage={text.default}\r\n              />\r\n            </Headline4>\r\n          )}\r\n        </Content>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoaderComponent;\r\n","import { Breakpoints } from './Variables.style';\r\nimport { css } from 'styled-components';\r\n\r\nexport const Media = Object.keys(Breakpoints).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n    @media (max-width: ${Breakpoints[label] / 16}em) {\r\n      ${css(...args)}\r\n    }\r\n  `;\r\n\r\n  return acc;\r\n}, {});\r\n","import { css } from 'styled-components';\r\n\r\nimport { Colors, Fonts } from '../Variables.style';\r\n\r\nexport const Submit = css`\r\n  padding: 8px 20px;\r\n  transition: .2s ease;\r\n  border-radius: 2px;\r\n  border: 0;\r\n  background-color: ${Colors.matisse};\r\n  color: ${Colors.white};\r\n  font-family: ${Fonts.Amatic};\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  letter-spacing: 1.5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${Colors.mischka};\r\n    color: ${Colors.matisse};\r\n  }\r\n\r\n`;\r\n","import { css } from 'styled-components';\r\n\r\nimport { Colors, Fonts } from '../Variables.style';\r\n\r\nexport const Input = css`\r\n  max-width: 100%;\r\n  padding: 6px 15px;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  background-color: ${Colors.mischka};\r\n  color: ${Colors.black};\r\n  font-family: ${Fonts.Amatic};\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  appearance: none;\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\n// import { Colors } from '../../assets/Variables.style';\r\nimport { Media } from '../../assets/Mixins.style';\r\n\r\nimport { Content as commonContent } from '../../assets/common/Wrappers.style';\r\nimport { Headline as commonHeadline, Headline4 as commonHeadline4 } from '../../assets/common/Headlines.style';\r\nimport { Submit as commonSubmit } from '../../assets/common/Buttons.style';\r\nimport { Input as commonInput } from '../../assets/common/Inputs.style';\r\n\r\nexport const Content = styled.div`\r\n  ${commonContent}\r\n  padding: 50px 20px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Headline = styled.h1`\r\n  ${commonHeadline}\r\n  letter-spacing: 4px;\r\n`;\r\n\r\nexport const Headline4 = styled.h4`\r\n  ${commonHeadline4}\r\n  padding-top: 30px;\r\n`;\r\n\r\nexport const Submit = styled.button`\r\n  ${commonSubmit}\r\n  margin-left: 20px;\r\n\r\n  ${Media.sm`\r\n    margin: 20px 0;\r\n  `}\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  position: relative;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const FakeInputBox = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  justify-content: center;\r\n  padding: 5px 0;\r\n  transform: translateX(-37%);\r\n\r\n  ${Media.sm`\r\n    left: 0%;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    transform: translateX(0%);\r\n  `}\r\n`;\r\n\r\nexport const InputFile = styled.input`\r\n  ${commonInput}\r\n  position: relative;\r\n  max-width: 300px;\r\n  min-width: 300px;\r\n  opacity: 0;\r\n  z-index: 2;\r\n\r\n  ${Media.sm`\r\n    width: 100%;\r\n    max-width: 100%;\r\n    min-width: 200px;\r\n  `}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  ${commonInput}\r\n  min-width: 300px;\r\n  letter-spacing: 1.5px;\r\n  cursor: pointer;\r\n\r\n  ${Media.sm`\r\n    width: 100%;\r\n    min-width: 200px;\r\n  `}\r\n`;\r\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport uniqid from 'uniqid';\r\n\r\nimport { client } from '../../Client';\r\nimport LoaderComponent from '../Loader/Loader';\r\n\r\nimport {\r\n  Content,\r\n  Headline,\r\n  Headline4,\r\n  Submit,\r\n  Input,\r\n  InputFile,\r\n  FakeInputBox,\r\n  Form\r\n} from './UploadForm.style';\r\n\r\nconst ADD_IMAGE = gql`\r\n  mutation ADD_IMAGE($file: String!, $url: String!, $date: String!, $uniq: String!) {\r\n    addImage(imageInput: { file: $file, url: $url, date: $date, uniq: $uniq }) {\r\n      file\r\n      url\r\n      date\r\n      uniq\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_IMAGES = gql`\r\n  {\r\n    images {\r\n      file\r\n      url\r\n      date\r\n      uniq\r\n    }\r\n  }\r\n`;\r\n\r\nconst handleSubmit = (event, addImage, input) => {\r\n  event.preventDefault();\r\n  const upload = document.getElementById('upload').files[0];\r\n  const uploadFile = document.getElementById('fakeUpload');\r\n  let readFile = new FileReader();\r\n  let dateISOS = new Date().toISOString();\r\n\r\n  if (upload !== undefined) {\r\n    uploadFile.value = upload.name;\r\n    readFile.onloadend = () => {\r\n      addImage({\r\n        variables: { file: upload.name, url: readFile.result, date: dateISOS, uniq: uniqid() }\r\n      });\r\n    };\r\n\r\n    readFile.readAsDataURL(upload);\r\n    uploadFile.value = 'Upload Image...';\r\n  } else {\r\n    uploadFile.value = 'Nie wybrano pliku...';\r\n  }\r\n};\r\n\r\nconst UploadForm = ({ handleImageSend }) => {\r\n  let input;\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={ADD_IMAGE}\r\n      update={(cache, { data: { addImage } }) => {\r\n        const { images } = client.readQuery({ query: GET_IMAGES });\r\n        client.writeQuery({\r\n          query: GET_IMAGES,\r\n          data: { images: images.concat([addImage]) }\r\n        });\r\n      }}\r\n    >\r\n      {(addImage, { loading, error, data }) => (\r\n        <Content>\r\n          <Headline>\r\n            <FormattedMessage id=\"app.title\" defaultMessage=\"Images Cloud\">\r\n              Images Cloud\r\n            </FormattedMessage>\r\n          </Headline>\r\n          <Form\r\n            onSubmit={event => {\r\n              handleSubmit(event, addImage, input);\r\n            }}\r\n          >\r\n            <InputFile\r\n              type=\"file\"\r\n              ref={node => {\r\n                input = node;\r\n              }}\r\n              onChange={event => handleImageSend(event)}\r\n              id=\"upload\"\r\n            />\r\n            <FakeInputBox>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"fakeUpload\"\r\n                placeholder=\"Upload image...\"\r\n              />\r\n              <Submit type=\"submit\">\r\n                <FormattedMessage id=\"buttons.submit\" defaultMessage=\"Submit\" />\r\n              </Submit>\r\n            </FakeInputBox>\r\n          </Form>\r\n          {loading && (\r\n            <LoaderComponent\r\n              text={{ id: 'alerts.waiting', default: 'Waiting...' }}\r\n              wrapper={false}\r\n            />\r\n          )}\r\n          {error && (\r\n            <Headline4>\r\n              <FormattedMessage\r\n                id=\"alerts.error\"\r\n                defaultMessage=\"Ups! Something went wrong...!\"\r\n              />\r\n            </Headline4>\r\n          )}\r\n        </Content>\r\n      )}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","const timeConverter = (timestamp) => {\r\n  const a = new Date(parseInt(timestamp, 10));\r\n  const year = a.getFullYear();\r\n  const month = a.getMonth() + 1 < 10 ? \"0\" + (a.getMonth() + 1).toString() : a.getMonth() + 1;\r\n\r\n  const date = a.getDate();\r\n  const hour = a.getHours();\r\n  const min = a.getMinutes() < 10 ? \"0\" + a.getMinutes() : a.getMinutes();\r\n  const sec = a.getSeconds() < 10 ? \"0\" + a.getSeconds() : a.getSeconds();\r\n  return `${date}.${month}.${year}, ${hour}:${min}:${sec}`;\r\n}\r\n\r\nexport default timeConverter;\r\n","import { css } from 'styled-components';\r\n\r\nexport const Image = css`\r\n  width: 100%;\r\n  max-width: 100%;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { Media } from '../../assets/Mixins.style';\r\n\r\nimport {\r\n  Content as commonContent,\r\n  Grid as commonGrid\r\n} from '../../assets/common/Wrappers.style';\r\nimport { Image as commonImage } from '../../assets/common/Images.style';\r\nimport { Headline3 as commonHeadline3 } from '../../assets/common/Headlines.style';\r\nimport { Colors, Fonts } from '../../assets/Variables.style';\r\n\r\nexport const Content = styled.div`\r\n  ${commonContent}\r\n\r\n  ${Media.sm`\r\n    padding-top: 50px;\r\n  `}\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  ${commonGrid}\r\n`;\r\n\r\nexport const RemoveButton = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  padding: 3px 5px;\r\n  transition: 0.2s;\r\n  border-radius: 3px;\r\n  background-color: ${Colors.red};\r\n  color: ${Colors.white};\r\n  font-size: 14px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n\r\n  &:hover {\r\n    background-color: ${Colors.roofTerracotta};\r\n  }\r\n`;\r\n\r\nexport const DateLabel = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  bottom: 13px;\r\n  left: 10px;\r\n  width: calc(100% - 20px);\r\n  padding: 20px;\r\n  background-color: rgba(0, 0, 0, 0.45);\r\n  color: ${Colors.white};\r\n  text-align: center;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  position: relative;\r\n  width: 33.33%;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    opacity: 0.8;\r\n  }\r\n\r\n  &:hover ${RemoveButton}, &:hover ${DateLabel} {\r\n    display: block;\r\n  }\r\n\r\n  ${Media.lg`\r\n    width: 50%;\r\n  `}\r\n\r\n  ${Media.xs`\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  ${commonImage}\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Headline3 = styled.h3`\r\n  ${commonHeadline3}\r\n  font-family: ${Fonts.Amatic};\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nimport { client } from \"../../Client\";\r\nimport timeConverter from \"../../assets/scripts/TimeConverter\";\r\n\r\nimport {\r\n  Content,\r\n  Grid,\r\n  Item,\r\n  RemoveButton,\r\n  Image,\r\n  DateLabel,\r\n  Headline3\r\n} from \"./ImagesList.style\";\r\n\r\nconst GET_IMAGES = gql`\r\n  {\r\n    images {\r\n      file\r\n      url\r\n      date\r\n      uniq\r\n    }\r\n  }\r\n`;\r\n\r\nconst REMOVE_IMAGE = gql`\r\n  mutation REMOVE_IMAGE($uniq: String!) {\r\n    removeImage(uniq: $uniq) {\r\n      file\r\n      url\r\n      date\r\n      uniq\r\n    }\r\n  }\r\n`;\r\n\r\nconst ImagesList = ({ data, loading, error }) => {\r\n  const [photoIndex, updatePhotoIndex] = useState(0);\r\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\r\n  let imagesList = [];\r\n  if (data === undefined) {\r\n    return (imagesList = []);\r\n  } else if (Object.entries(data).length !== 0) {\r\n    imagesList = data.images.map((image, index) => {\r\n      return (\r\n        <Mutation\r\n          key={index}\r\n          mutation={REMOVE_IMAGE}\r\n          update={(cache, { data: { removeImage } }) => {\r\n            const { images } = client.readQuery({ query: GET_IMAGES });\r\n            const newImages = images.filter(image => image.uniq !== removeImage.uniq);\r\n            client.writeQuery({\r\n              query: GET_IMAGES,\r\n              data: { images: newImages }\r\n            });\r\n          }}\r\n        >\r\n          {(removeImage, { loading, error, data }) => (\r\n            <Item key={index}>\r\n              <RemoveButton\r\n                onClick={() => removeImage({ variables: { uniq: image.uniq } })}\r\n              >\r\n                X\r\n              </RemoveButton>\r\n              <Image\r\n                src={image.url}\r\n                alt=\"Image\"\r\n                onClick={() => {\r\n                  updatePhotoIndex(index);\r\n                  setIsLightboxOpen(true);\r\n                }}\r\n              />\r\n              <DateLabel>{timeConverter(image.date)}</DateLabel>\r\n            </Item>\r\n          )}\r\n        </Mutation>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <Content>\r\n      <Grid>\r\n        {imagesList.length === 0 && !loading && (\r\n          <Headline3>\r\n            <FormattedMessage id=\"alerts.emptyImages\" />\r\n          </Headline3>\r\n        )}\r\n        {imagesList.length > 0 && imagesList}\r\n      </Grid>\r\n\r\n      {isLightboxOpen === true && (\r\n        <Lightbox\r\n          mainSrc={data.images[photoIndex].url}\r\n          nextSrc={data.images[(photoIndex + 1) % data.images.length].url}\r\n          prevSrc={\r\n            data.images[\r\n              (photoIndex + data.images.length - 1) % data.images.length\r\n            ].url\r\n          }\r\n          onCloseRequest={() => setIsLightboxOpen(false)}\r\n          onMovePrevRequest={() =>\r\n            updatePhotoIndex(\r\n              (photoIndex + data.images.length - 1) % data.images.length\r\n            )\r\n          }\r\n          onMoveNextRequest={() =>\r\n            updatePhotoIndex((photoIndex + 1) % data.images.length)\r\n          }\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ImagesList;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    font-family: 'Dancing Script', cursive;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport {\r\n  Section as commonSection,\r\n  Content as commonContent,\r\n  Container as commonContainer,\r\n} from './assets/common/Wrappers.style';\r\nimport { Headline4 as commonHeadline4 } from './assets/common/Headlines.style';\r\n\r\nimport { Fonts } from './assets/Variables.style';\r\n\r\nexport const Section = styled.div`\r\n  ${commonSection}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${commonContent}\r\n  padding: 0 0 30px 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  ${commonContainer}\r\n`;\r\n\r\nexport const Headline4 = styled.h1`\r\n  ${commonHeadline4}\r\n  font-family: ${Fonts.Amatic};\r\n  text-align: center;\r\n`;\r\n\r\n\r\n","import React, { Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport UploadForm from \"./components/UploadForm/UploadForm\";\r\nimport ImagesList from \"./components/ImagesList/ImagesList\";\r\nimport LoaderComponent from \"./components/Loader/Loader\";\r\n\r\nimport { GlobalStyle } from \"./assets/common/Global.style\";\r\nimport { Section, Content, Container, Headline4 } from \"./App.style\";\r\n\r\nconst GET_IMAGES = gql`\r\n  {\r\n    images {\r\n      file\r\n      url\r\n      date\r\n      uniq\r\n    }\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const handleImageSend = event => {\r\n    event.preventDefault();\r\n\r\n    const uploadFile = document.getElementById(\"fakeUpload\");\r\n    let file = event.target.files[0];\r\n    uploadFile.value = file.name;\r\n  };\r\n\r\n  return (\r\n    <Query query={GET_IMAGES}>\r\n      {({ loading, error, data }) => {\r\n        return (\r\n          <Fragment>\r\n            <GlobalStyle />\r\n            <Section>\r\n              <Content>\r\n                <Container>\r\n                  <UploadForm handleImageSend={handleImageSend} />\r\n                  {loading && (\r\n                    <LoaderComponent\r\n                      text={{\r\n                        id: \"alerts.loadingData\",\r\n                        default: \"Loading data, please wait...\"\r\n                      }}\r\n                      wrapper={true}\r\n                    />\r\n                  )}\r\n                  {error && (\r\n                    <Headline4>\r\n                      <FormattedMessage\r\n                        id=\"alerts.error\"\r\n                        defaultMessage=\"Ups! Something went wrong...!\"\r\n                      />\r\n                    </Headline4>\r\n                  )}\r\n                  <ImagesList data={data} loading={loading} error={error} />\r\n                </Container>\r\n              </Content>\r\n            </Section>\r\n          </Fragment>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\nimport { addLocaleData, IntlProvider } from \"react-intl\";\nimport locale_en from 'react-intl/locale-data/en';\nimport locale_pl from 'react-intl/locale-data/pl';\nimport en from './translations/en.json';\nimport pl from './translations/pl.json';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nexport const translations = {\n  'en-US': en,\n  'en-GB': en,\n  'pl-PL': pl\n};\n\nconst Context = React.createContext();\n\nconst IntlProviderWrapper = ({ children }) => {\n  const [locale, switchLanguage] = useState(navigator.language);\n  return (\n    <Context.Provider value={{ switchLanguage }}>\n      <IntlProvider\n        key={translations[locale] ? locale : 'en-US'}\n        locale={translations[locale] ? locale : 'en-US'}\n        messages={\n          translations[locale] ? translations[locale] : translations['en-US']\n        }\n        defaultLocale=\"en-US\"\n      >\n        {children}\n      </IntlProvider>\n    </Context.Provider>\n  );\n};\n\nexport { IntlProviderWrapper, Context as IntlContext };","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  console.log('hello from SW');\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { client } from './Client';\r\n\r\nimport App from './App';\r\nimport { IntlProviderWrapper } from './Intl';\r\n\r\nimport 'react-image-lightbox/style.css';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <IntlProviderWrapper>\r\n    <ApolloProvider client={client}><App /></ApolloProvider>\r\n  </IntlProviderWrapper>\r\n  , document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}